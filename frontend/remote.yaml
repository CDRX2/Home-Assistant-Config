type: 'custom:mod-card'
card:
  type: 'custom:state-switch'
  entity: sensor.remote_select
  states:
    "off":
      type: 'custom:layout-card'
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: 25% 25% 25% 25%
        grid-template-rows: auto
        grid-template-areas: |
          "plex youtube ytkids music"
          "home home home home"
        grid-gap: 0px
      cards:
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Plex
            service: script.watch_plex
            picture: /local/ui/btns/plex_off.png
          view_layout:
            grid-area: plex
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube
            service: script.watch_youtube
            picture: /local/ui/btns/youtube_off.png
          view_layout:
            grid-area: youtube
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube Kids
            service: script.watch_youtube_kids
            picture: /local/ui/btns/youtube-kids_off.png
          view_layout:
            grid-area: ytkids
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Radio
#            service: script.radio
#            picture: /local/ui/btns/radio_off.png
#          view_layout:
#            grid-area: radio
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Musique
            service: script.music_assistant
            picture: /local/ui/btns/music_off.png
          view_layout:
            grid-area: music
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Musique
#            service: script.music
#            picture: /local/ui/btns/music_off.png
#          view_layout:
#            grid-area: music
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Bluetooth
#            service: script.bluetooth
#            picture: /local/ui/btns/bluetooth_off.png
#          view_layout:
#            grid-area: bt
        - type: 'custom:button-card'
          template: media_state
          variables:
            background: transparent url("/local/ui/btns/return_home.png")
            justify: left
          view_layout:
            grid-area: home
          state_display: >
            [[[ return 'Retour Ã  la maison'; ]]]
          tap_action:
            action: navigate
            navigation_path: /lovelace-visual/lights
          styles:
            state:
            - font-size: >
                [[[ return (window.location.pathname == '/lovelace-remote/remote') ? '3.5vw' : '1.25vw'; ]]]

    'music':
      type: 'custom:layout-card'
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: 25% 25% 25% 25%
        grid-template-rows: auto
        grid-template-areas: |
          "plex youtube ytkids music"
          "power stereo surround mute"
          "play previous next stop"
          "voldown voldown volup volup"
          "vol vol vol vol"
          "title title title title"
          "home home home home"
        grid-gap: 0px
      cards:
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Plex
            service: script.watch_plex
            picture: /local/ui/btns/plex_off.png
          view_layout:
            grid-area: plex
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube
            service: script.watch_youtube
            picture: /local/ui/btns/youtube_off.png
          view_layout:
            grid-area: youtube
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube Kids
            service: script.watch_youtube_kids
            picture: /local/ui/btns/youtube-kids_off.png
          view_layout:
            grid-area: ytkids
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Radio
#            service: media_player.play_media
#            picture: /local/ui/btns/radio_off.png
#          view_layout:
#            grid-area: radio
#          tap_action:
#            service_data:
#              entity_id: media_player.sc_lx78_dlna
#              media_content_type: music
#              media_content_id: 'http://stream.srg-ssr.ch/m/rsc_de/mp3_128'
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Musique
#            service: script.music_source
#            picture: /local/ui/btns/music_on.png
#          view_layout:
#            grid-area: music
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Musique
            service: script.music_assistant_source
            picture: /local/ui/btns/music_on.png
          view_layout:
            grid-area: music
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Bluetooth
#            service: media_player.select_source
#            picture: /local/ui/btns/bluetooth_off.png
#          view_layout:
#            grid-area: bt
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              source: BT AUDIO
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.turn_off
            picture: /local/ui/btns/power.png
          view_layout:
            grid-area: power
          tap_action:
            service_data:
              entity_id: media_player.pioneer_avr
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.select_sound_mode
            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'EXTENDED STEREO' ? '/local/ui/btns/stereo_on.png' : '/local/ui/btns/stereo_off.png'; ]]]"
          view_layout:
            grid-area: stereo
          tap_action:
            service_data:
              entity_id: media_player.pioneer_avr
              sound_mode: EXTENDED STEREO
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.select_sound_mode
            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'AUTO SURROUND' ? '/local/ui/btns/surround_on.png' : '/local/ui/btns/surround_off.png'; ]]]"
          view_layout:
            grid-area: surround
          tap_action:
            service_data:
              entity_id: media_player.pioneer_avr
              sound_mode: AUTO SURROUND
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: script.AVR_mute
            picture: "[[[ return states['sensor.pioneer_volume'].state == 'MUTE' ? '/local/ui/btns/mute_on.png' : '/local/ui/btns/mute_off.png' ]]]"
          view_layout:
            grid-area: mute
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: "[[[ return states['media_player.sc_lx78_dlna'].state == 'playing' ? 'media_player.media_pause' : 'media_player.media_play' ]]]"
            picture: "[[[ return states['media_player.sc_lx78_dlna'].state == 'playing' ? '/local/ui/btns/pause.png' : '/local/ui/btns/play.png' ]]]"
          view_layout:
            grid-area: play
          tap_action:
            service_data:
              entity_id: "[[[ return states['media_player.sc_lx78_dlna'].state == 'playing' ? 'media_player.pioneer_avr' : 'media_player.sc_lx78' ]]]"
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.media_previous_track
            picture: /local/ui/btns/previous.png
          view_layout:
            grid-area: previous
          tap_action:
            service_data:
              entity_id: media_player.sc_lx78
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.media_next_track
            picture: /local/ui/btns/next.png
          view_layout:
            grid-area: next
          tap_action:
            service_data:
              entity_id: media_player.sc_lx78
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.media_stop
            picture: /local/ui/btns/stop.png
          view_layout:
            grid-area: stop
          tap_action:
            service_data:
              entity_id: media_player.sc_lx78
        - type: 'custom:button-card'
          template: media_volume
          variables:
            service: media_player.volume_down
            picture: /local/ui/btns/volume_down.png
            radius: 10vw 0 0 10vw
            left: 20%
          view_layout:
            grid-area: voldown
        - type: 'custom:button-card'
          template: media_volume
          variables:
            service: media_player.volume_up
            picture: /local/ui/btns/volume_up.png
            radius: 0 10vw 10vw 0
            left: 0%
          view_layout:
            grid-area: volup
        - type: 'custom:button-card'
          template: media_state
          variables:
            background: transparent url("/local/ui/btns/volume.png")
            justify: right
          view_layout:
            grid-area: vol
          state_display: >
            [[[ var volume = (states['sensor.pioneer_volume'].state + ' dB');
            return states['sensor.pioneer_volume'].state == 'MUTE' ? 'MUTE' : volume; ]]]
        - type: picture-elements
          image: /local/ui/btns/background_horizontal.png
          elements:
            - type: 'custom:button-card'
              template: media_state_title
              entity: media_player.sc_lx78
              state_display: >
                [[[
                  if (entity) {
                    let elt = this.shadowRoot,
                      await = setTimeout(marquee, 0),
                      artist = entity.attributes.media_artist,
                      title = entity.attributes.media_title,
                      output = artist === undefined && title !== undefined
                        ? title
                        : title === undefined && artist !== undefined
                          ? artist
                          : title !== undefined && artist !== undefined
                            ? `${artist} - ${title}`
                            : variables.translate_idle;
                    function marquee() {
                      let state = elt.getElementById("state"),
                        container = elt.getElementById("container");
                      if (state && container) {
                        state.innerHTML = output;
                        let ro = new ResizeObserver(entries => {
                          let spacer = "&nbsp;".repeat(3),
                            s = entries[0],
                            c = entries[1],
                            r = s && s.contentRect &&
                                c && c.contentRect &&
                                s.contentRect.width !== 0 &&
                                c.contentRect.width !== 0;
                          if (r && s.contentRect.width < c.contentRect.width) {
                            state.classList.remove("marquee");
                          }
                          else if (r && s.contentRect.width >= c.contentRect.width) {
                            state.innerHTML = `${output} ${spacer} ${output} ${spacer}&nbsp;`;
                            state.classList.add("marquee");
                          }
                        });
                        ro.observe(state);
                        ro.observe(container);
                      }
                    }
                    return output;
                  }
                  return variables.translate_unknown;
                ]]]
          card_mod:
            style: |
              ha-card {
                background: none;
                border-radius: 0px;
                box-shadow: none;
              }
              :host {
                --masonry-view-card-margin: 0px !important;
              }
          view_layout:
            grid-area: title
        - type: 'custom:button-card'
          template: media_state
          variables:
            background: transparent url("/local/ui/btns/return_home.png")
            justify: left
          view_layout:
            grid-area: home
          state_display: >
            [[[ return 'Retour Ã  la maison'; ]]]
          tap_action:
            action: navigate
            navigation_path: /lovelace-visual/lights
          styles:
            state:
            - font-size: >
                [[[ return (window.location.pathname == '/lovelace-remote/remote') ? '3.5vw' : '1.25vw'; ]]]

#    'bluetooth':
#      type: 'custom:layout-card'
#      layout_type: custom:grid-layout
#      layout:
#        grid-template-columns: 25% 25% 25% 25%
#        grid-template-rows: auto
#        grid-template-areas: |
#          "plex youtube ytkids radio"
#          "music bt . ."
#          "power stereo surround mute"
#          "play previous next stop"
#          "voldown voldown volup volup"
#          "vol vol vol vol"
#          "home home home home"
#        grid-gap: 0px
#      cards:
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Plex
#            service: script.watch_plex
#            picture: /local/ui/btns/plex_off.png
#          view_layout:
#            grid-area: plex
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: YouTube
#            service: script.watch_youtube
#            picture: /local/ui/btns/youtube_off.png
#          view_layout:
#            grid-area: youtube
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: YouTube Kids
#            service: script.watch_youtube_kids
#            picture: /local/ui/btns/youtube-kids_off.png
#          view_layout:
#            grid-area: ytkids
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Radio
#            service: media_player.play_media
#            picture: /local/ui/btns/radio_off.png
#          view_layout:
#            grid-area: radio
#          tap_action:
#            service_data:
#              entity_id: media_player.sc_lx78_dlna
#              media_content_type: music
#              media_content_id: 'http://stream.srg-ssr.ch/m/rsc_de/mp3_128'
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Musique
#            service: script.music_source
#            picture: /local/ui/btns/music_off.png
#          view_layout:
#            grid-area: music
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Bluetooth
#            service: media_player.select_source
#            picture: /local/ui/btns/bluetooth_on.png
#          view_layout:
#            grid-area: bt
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              source: BT AUDIO
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.turn_off
#            picture: /local/ui/btns/power.png
#          view_layout:
#            grid-area: power
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.select_sound_mode
#            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'EXTENDED STEREO' ? '/local/ui/btns/stereo_on.png' : '/local/ui/btns/stereo_off.png'; ]]]"
#          view_layout:
#            grid-area: stereo
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              sound_mode: EXTENDED STEREO
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.select_sound_mode
#            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'AUTO SURROUND' ? '/local/ui/btns/surround_on.png' : '/local/ui/btns/surround_off.png'; ]]]"
#          view_layout:
#            grid-area: surround
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              sound_mode: AUTO SURROUND
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: script.AVR_mute
#            picture: "[[[ return states['sensor.pioneer_volume'].state == 'MUTE' ? '/local/ui/btns/mute_on.png' : '/local/ui/btns/mute_off.png' ]]]"
#          view_layout:
#            grid-area: mute
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.media_play_pause
#            picture: /local/ui/btns/play_pause.png
#          view_layout:
#            grid-area: play
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.media_previous_track
#            picture: /local/ui/btns/previous.png
#          view_layout:
#            grid-area: previous
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.media_next_track
#            picture: /local/ui/btns/next.png
#          view_layout:
#            grid-area: next
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.media_stop
#            picture: /local/ui/btns/stop.png
#          view_layout:
#            grid-area: stop
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_volume
#          variables:
#            service: media_player.volume_down
#            picture: /local/ui/btns/volume_down.png
#            radius: 10vw 0 0 10vw
#            left: 20%
#          view_layout:
#            grid-area: voldown
#        - type: 'custom:button-card'
#          template: media_volume
#          variables:
#            service: media_player.volume_up
#            picture: /local/ui/btns/volume_up.png
#            radius: 0 10vw 10vw 0
#            left: 0%
#          view_layout:
#            grid-area: volup
#        - type: 'custom:button-card'
#          template: media_state
#          variables:
#            background: transparent url("/local/ui/btns/volume.png")
#            justify: right
#          state_display: >
#            [[[ var volume = (states['sensor.pioneer_volume'].state + ' dB');
#            return states['sensor.pioneer_volume'].state == 'MUTE' ? 'MUTE' : volume; ]]]
#          view_layout:
#            grid-area: vol
#        - type: 'custom:button-card'
#          template: media_state
#          variables:
#            background: transparent url("/local/ui/btns/return_home.png")
#            justify: left
#          view_layout:
#            grid-area: home
#          state_display: >
#            [[[ return 'Retour Ã  la maison'; ]]]
#          tap_action:
#            action: navigate
#            navigation_path: /lovelace-visual/lights
#          styles:
#            state:
#            - font-size: >
#                [[[ return (window.location.pathname == '/lovelace-remote/remote') ? '3.5vw' : '1.25vw'; ]]]

#    'radio':
#      type: 'custom:layout-card'
#      layout_type: custom:grid-layout
#      layout:
#        grid-template-columns: 25% 25% 25% 25%
#        grid-template-rows: auto
#        grid-template-areas: |
#          "plex youtube ytkids radio"
#          "music bt . ."
#          "power stereo surround mute"
#          "voldown voldown volup volup"
#          "vol vol vol vol"
#          "title title title title"
#          "home home home home"
#        grid-gap: 0px
#      cards:
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Plex
#            service: script.watch_plex
#            picture: /local/ui/btns/plex_off.png
#          view_layout:
#            grid-area: plex
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: YouTube
#            service: script.watch_youtube
#            picture: /local/ui/btns/youtube_off.png
#          view_layout:
#            grid-area: youtube
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: YouTube Kids
#            service: script.watch_youtube_kids
#            picture: /local/ui/btns/youtube-kids_off.png
#          view_layout:
#            grid-area: ytkids
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Radio
#            service: media_player.play_media
#            picture: /local/ui/btns/radio_on.png
#          view_layout:
#            grid-area: radio
#          tap_action:
#            service_data:
#              entity_id: media_player.sc_lx78_dlna
#              media_content_type: music
#              media_content_id: 'http://stream.srg-ssr.ch/m/rsc_de/mp3_128'
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Musique
#            service: script.music_source
#            picture: /local/ui/btns/music_off.png
#          view_layout:
#            grid-area: music
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: Bluetooth
#            service: media_player.select_source
#            picture: /local/ui/btns/bluetooth_off.png
#          view_layout:
#            grid-area: bt
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              source: BT AUDIO
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.turn_off
#            picture: /local/ui/btns/power.png
#          view_layout:
#            grid-area: power
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.select_sound_mode
#            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'EXTENDED STEREO' ? '/local/ui/btns/stereo_on.png' : '/local/ui/btns/stereo_off.png'; ]]]"
#          view_layout:
#            grid-area: stereo
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              sound_mode: EXTENDED STEREO
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: media_player.select_sound_mode
#            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'AUTO SURROUND' ? '/local/ui/btns/surround_on.png' : '/local/ui/btns/surround_off.png'; ]]]"
#          view_layout:
#            grid-area: surround
#          tap_action:
#            service_data:
#              entity_id: media_player.pioneer_avr
#              sound_mode: AUTO SURROUND
#        - type: 'custom:button-card'
#          template: media_service
#          variables:
#            name: ''
#            service: script.AVR_mute
#            picture: "[[[ return states['sensor.pioneer_volume'].state == 'MUTE' ? '/local/ui/btns/mute_on.png' : '/local/ui/btns/mute_off.png' ]]]"
#          view_layout:
#            grid-area: mute
#        - type: 'custom:button-card'
#          template: media_volume
#          variables:
#            service: media_player.volume_down
#            picture: /local/ui/btns/volume_down.png
#            radius: 10vw 0 0 10vw
#            left: 20%
#          view_layout:
#            grid-area: voldown
#        - type: 'custom:button-card'
#          template: media_volume
#          variables:
#            service: media_player.volume_up
#            picture: /local/ui/btns/volume_up.png
#            radius: 0 10vw 10vw 0
#            left: 0%
#          view_layout:
#            grid-area: volup
#        - type: 'custom:button-card'
#          template: media_state
#          variables:
#            background: transparent url("/local/ui/btns/volume.png")
#            justify: right
#          state_display: >
#            [[[ var volume = (states['sensor.pioneer_volume'].state + ' dB');
#            return states['sensor.pioneer_volume'].state == 'MUTE' ? 'MUTE' : volume; ]]]
#          view_layout:
#            grid-area: vol
#        - type: picture-elements
#          image: /local/ui/btns/background_horizontal.png
#          elements:
#            - type: 'custom:button-card'
#              template: media_state_title
#              entity: media_player.pioneer_avr
#              state_display: >
#                [[[
#                  if (entity) {
#                    let elt = this.shadowRoot,
#                      await = setTimeout(marquee, 0),
#                      title = entity.attributes.media_title,
#                      output = title !== undefined
#                        ? title
#                        : variables.translate_idle;
#                    function marquee() {
#                      let state = elt.getElementById("state"),
#                        container = elt.getElementById("container");
#                      if (state && container) {
#                        state.innerHTML = output;
#                        let ro = new ResizeObserver(entries => {
#                          let spacer = "&nbsp;".repeat(3),
#                            s = entries[0],
#                            c = entries[1],
#                            r = s && s.contentRect &&
#                                c && c.contentRect &&
#                                s.contentRect.width !== 0 &&
#                                c.contentRect.width !== 0;
#                          if (r && s.contentRect.width < c.contentRect.width) {
#                            state.classList.remove("marquee");
#                          }
#                          else if (r && s.contentRect.width >= c.contentRect.width) {
#                            state.innerHTML = `${output} ${spacer} ${output} ${spacer}&nbsp;`;
#                            state.classList.add("marquee");
#                          }
#                        });
#                        ro.observe(state);
#                        ro.observe(container);
#                      }
#                    }
#                    return output;
#                  }
#                  return variables.translate_unknown;
#                ]]]
#          card_mod:
#            style: |
#              ha-card {
#                background: none;
#                border-radius: 0px;
#                box-shadow: none;
#              }
#              :host {
#                --masonry-view-card-margin: 0px !important;
#              }
#          view_layout:
#            grid-area: title
#        - type: 'custom:button-card'
#          template: media_state
#          variables:
#            background: transparent url("/local/ui/btns/return_home.png")
#            justify: left
#          view_layout:
#            grid-area: home
#          state_display: >
#            [[[ return 'Retour Ã  la maison'; ]]]
#          tap_action:
#            action: navigate
#            navigation_path: /lovelace-visual/lights
#          styles:
#            state:
#            - font-size: >
#                [[[ return (window.location.pathname == '/lovelace-remote/remote') ? '3.5vw' : '1.25vw'; ]]]

    'other':
      type: 'custom:layout-card'
      layout_type: custom:grid-layout
      layout:
        grid-template-columns: 25% 25% 25% 25%
        grid-template-rows: auto
        grid-template-areas: |
          "plex youtube ytkids music"
          "power . . mute"
          "menu stereo surround volup"
          "play up back volup"
          "left enter right voldown"
          ". down . voldown"
          "vol vol vol vol"
          "title title title title"
          "home home home home"
          "input input input input"
        grid-gap: 0px
      cards:
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Plex
            service: media_player.select_source
            picture: "[[[ return states['media_player.living_room_tv'].attributes['source'] == 'Plex' ? '/local/ui/btns/plex_on.png' : '/local/ui/btns/plex_off.png'; ]]]"
          view_layout:
            grid-area: plex
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              source: Plex
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube
            service: media_player.select_source
            picture: "[[[ return states['media_player.living_room_tv'].attributes['source'] == 'YouTube' ? '/local/ui/btns/youtube_on.png' : '/local/ui/btns/youtube_off.png'; ]]]"
          view_layout:
            grid-area: youtube
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              source: YouTube
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: YouTube Kids
            service: media_player.select_source
            picture: "[[[ return states['media_player.living_room_tv'].attributes['source'] == 'YouTube Kids' ? '/local/ui/btns/youtube-kids_on.png' : '/local/ui/btns/youtube-kids_off.png'; ]]]"
          view_layout:
            grid-area: ytkids
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              source: YouTube Kids
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: Musique
            service: script.music_assistant_source
            picture: /local/ui/btns/music_on.png
          view_layout:
            grid-area: music
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.turn_off
            picture: /local/ui/btns/power.png
          view_layout:
            grid-area: power
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: script.AVR_mute
            picture: "[[[ return states['sensor.pioneer_volume'].state == 'MUTE' ? '/local/ui/btns/mute_on.png' : '/local/ui/btns/mute_off.png' ]]]"
          view_layout:
            grid-area: mute
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/menu.png
          view_layout:
            grid-area: menu
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: HOME
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.select_sound_mode
            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'EXTENDED STEREO' ? '/local/ui/btns/stereo_on.png' : '/local/ui/btns/stereo_off.png'; ]]]"
          view_layout:
            grid-area: stereo
          tap_action:
            service_data:
              entity_id: media_player.pioneer_avr
              sound_mode: EXTENDED STEREO
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.select_sound_mode
            picture: "[[[ return states['media_player.pioneer_avr'].attributes['current_sound_mode'] == 'AUTO SURROUND' ? '/local/ui/btns/surround_on.png' : '/local/ui/btns/surround_off.png'; ]]]"
          view_layout:
            grid-area: surround
          tap_action:
            service_data:
              entity_id: media_player.pioneer_avr
              sound_mode: AUTO SURROUND
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: media_player.media_play_pause
            picture: >
              [[[ var play = (states['media_player.plex_plex_for_lg_lg_oled77w7v_z'].state);
              return play == 'playing' ? '/local/ui/btns/pause.png' : play == 'paused' ? '/local/ui/btns/play.png' : '/local/ui/btns/play_pause.png'; ]]]
          view_layout:
            grid-area: play
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/up.png
          view_layout:
            grid-area: up
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: UP
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/back.png
          view_layout:
            grid-area: back
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: BACK
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/left.png
          view_layout:
            grid-area: left
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: LEFT
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/ok.png
          view_layout:
            grid-area: enter
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: ENTER
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/right.png
          view_layout:
            grid-area: right
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: RIGHT
        - type: 'custom:button-card'
          template: media_service
          variables:
            name: ''
            service: webostv.button
            picture: /local/ui/btns/down.png
          view_layout:
            grid-area: down
          tap_action:
            service_data:
              entity_id: media_player.living_room_tv
              button: DOWN
        - type: 'custom:button-card'
          template: media_volume_vertical
          variables:
            service: media_player.volume_up
            picture: /local/ui/btns/volume_up_vertical.png
            radius: 10vw 10vw 0 0
            top: 20%
          view_layout:
            grid-area: volup
        - type: 'custom:button-card'
          template: media_volume_vertical
          variables:
            service: media_player.volume_down
            picture: /local/ui/btns/volume_down_vertical.png
            radius: 0 0 10vw 10vw
            top: 0%
          view_layout:
            grid-area: voldown
        - type: 'custom:button-card'
          template: media_state
          variables:
            background: transparent url("/local/ui/btns/volume.png")
            justify: right
          state_display: >
            [[[ var volume = (states['sensor.pioneer_volume'].state + ' dB');
            return states['sensor.pioneer_volume'].state == 'MUTE' ? 'MUTE' : volume; ]]]
          view_layout:
            grid-area: vol
        - type: picture-elements
          image: /local/ui/btns/background_horizontal.png
          elements:
            - type: 'custom:button-card'
              template: media_state_title
              entity: media_player.plex_living_room_tv
              state_display: >
                [[[
                  if (entity) {
                    let elt = this.shadowRoot,
                      await = setTimeout(marquee, 0),
                      series_title = entity.attributes.media_series_title,
                      series_season = ` - S` + entity.attributes.media_season,
                      series_episode = ` E` + entity.attributes.media_episode,
                      episode_title = ` - ` + entity.attributes.media_title,
                      tvshow = series_title + series_season + series_episode + episode_title,
                      movie = entity.attributes.media_title,
                      output = states['sensor.living_room_tv_source'].state == 'Plex' && entity.attributes.media_content_type == 'tvshow'
                        ? `${tvshow}`
                        : states['sensor.living_room_tv_source'].state == 'Plex' && entity.attributes.media_content_type == 'movie'
                          ? `${movie}`
                          : states['sensor.living_room_tv_source'].state == 'Plex' && entity.attributes.media_content_type != 'movie' && entity.attributes.media_content_type != 'tvshow'
                            ? `Plex`
                            : states['sensor.living_room_tv_source'].state == 'YouTube'
                              ? `YouTube`
                              : states['sensor.living_room_tv_source'].state == 'YouTube Kids'
                                ? `YouTube Kids`
                                : variables.translate_idle;
                    function marquee() {
                      let state = elt.getElementById("state"),
                        container = elt.getElementById("container");
                      if (state && container) {
                        state.innerHTML = output;
                        let ro = new ResizeObserver(entries => {
                          let spacer = "&nbsp;".repeat(3),
                            s = entries[0],
                            c = entries[1],
                            r = s && s.contentRect &&
                                c && c.contentRect &&
                                s.contentRect.width !== 0 &&
                                c.contentRect.width !== 0;
                          if (r && s.contentRect.width < c.contentRect.width) {
                            state.classList.remove("marquee");
                          }
                          else if (r && s.contentRect.width >= c.contentRect.width) {
                            state.innerHTML = `${output} ${spacer} ${output} ${spacer}&nbsp;`;
                            state.classList.add("marquee");
                          }
                        });
                        ro.observe(state);
                        ro.observe(container);
                      }
                    }
                    return output;
                  }
                  return variables.translate_unknown;
                ]]]
          card_mod:
            style: |
              ha-card {
                background: none;
                border-radius: 0px;
                box-shadow: none;
              }
              :host {
                --masonry-view-card-margin: 0px !important;
              }
          view_layout:
            grid-area: title
        - type: 'custom:button-card'
          template: media_state
          variables:
            background: transparent url("/local/ui/btns/return_home.png")
            justify: left
          view_layout:
            grid-area: home
          state_display: >
            [[[ return 'Retour Ã  la maison'; ]]]
          tap_action:
            action: navigate
            navigation_path: /lovelace-visual/lights
          styles:
            state:
            - font-size: >
                [[[ return (window.location.pathname == '/lovelace-remote/remote') ? '3.5vw' : '1.25vw'; ]]]
card_mod:
  style: |
    :host {
      align-self: center;
    }
view_layout:
  grid-area: remote
